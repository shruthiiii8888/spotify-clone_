{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistsContainer = styled.div`\n  padding: 20px;\n  background-color: #121212;\n  color: white;\n`;\n_c = ArtistsContainer;\nconst ArtistList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c2 = ArtistList;\nconst ArtistItem = styled.li`\n  cursor: pointer;\n  margin: 10px 0;\n  &:hover {\n    color: #1db954;\n  }\n`;\n_c3 = ArtistItem;\nconst ArtistDetailsContainer = styled.div`\n  margin-top: 20px;\n  text-align: center;\n`;\n_c4 = ArtistDetailsContainer;\nconst ArtistImage = styled.img`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  margin-bottom: 20px;\n`;\n_c5 = ArtistImage;\nconst SongList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c6 = SongList;\nconst SongItem = styled.li`\n  margin: 10px 0;\n  cursor: pointer;\n  &:hover {\n    color: #1db954;\n  }\n`;\n_c7 = SongItem;\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-top: 20px;\n`;\n_c8 = ErrorMessage;\nconst PlayerContainer = styled.div`\n  margin-top: 20px;\n  background: #1c1c1c;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n`;\n_c9 = PlayerContainer;\nconst AudioPlayer = styled.audio`\n  width: 100%;\n  max-width: 600px;\n`;\n_c10 = AudioPlayer;\nconst TopArtists = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [error, setError] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  useEffect(() => {\n    // Replace with your actual API call\n    const fetchArtists = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/top-artists');\n        const data = await response.json();\n        setArtists(data);\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n        setError('Failed to load top artists.');\n      }\n    };\n    fetchArtists();\n  }, []);\n  const handleArtistClick = artistId => {\n    const artist = artists.find(artist => artist.id === artistId);\n    if (artist) {\n      setSelectedArtist(artist);\n      setError(null);\n    } else {\n      setError('Failed to load artist details.');\n    }\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n  };\n  return /*#__PURE__*/_jsxDEV(ArtistsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ArtistList, {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(ArtistItem, {\n        onClick: () => handleArtistClick(artist.id),\n        children: artist.name\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(ArtistDetailsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ArtistImage, {\n        src: selectedArtist.image,\n        alt: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        children: selectedArtist.songs.slice(0, 4).map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n          onClick: () => handleSongClick(song),\n          children: song.name\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(PlayerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Now Playing: \", currentSong.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        controls: true,\n        src: currentSong.url,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtists, \"nbnhhrp0pUFQsEI4jpm0BdPt5Aw=\");\n_c11 = TopArtists;\nexport default TopArtists;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"ArtistsContainer\");\n$RefreshReg$(_c2, \"ArtistList\");\n$RefreshReg$(_c3, \"ArtistItem\");\n$RefreshReg$(_c4, \"ArtistDetailsContainer\");\n$RefreshReg$(_c5, \"ArtistImage\");\n$RefreshReg$(_c6, \"SongList\");\n$RefreshReg$(_c7, \"SongItem\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"PlayerContainer\");\n$RefreshReg$(_c10, \"AudioPlayer\");\n$RefreshReg$(_c11, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","ArtistsContainer","div","_c","ArtistList","ul","_c2","ArtistItem","li","_c3","ArtistDetailsContainer","_c4","ArtistImage","img","_c5","SongList","_c6","SongItem","_c7","ErrorMessage","_c8","PlayerContainer","_c9","AudioPlayer","audio","_c10","TopArtists","_s","artists","setArtists","selectedArtist","setSelectedArtist","error","setError","currentSong","setCurrentSong","fetchArtists","response","fetch","data","json","console","handleArtistClick","artistId","artist","find","id","handleSongClick","song","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","src","image","alt","songs","slice","controls","url","autoPlay","_c11","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/TopArtists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArtistsContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: #121212;\r\n  color: white;\r\n`;\r\n\r\nconst ArtistList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst ArtistItem = styled.li`\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n  &:hover {\r\n    color: #1db954;\r\n  }\r\n`;\r\n\r\nconst ArtistDetailsContainer = styled.div`\r\n  margin-top: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ArtistImage = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SongList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst SongItem = styled.li`\r\n  margin: 10px 0;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #1db954;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst PlayerContainer = styled.div`\r\n  margin-top: 20px;\r\n  background: #1c1c1c;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AudioPlayer = styled.audio`\r\n  width: 100%;\r\n  max-width: 600px;\r\n`;\r\n\r\nconst TopArtists = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual API call\r\n    const fetchArtists = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/top-artists');\r\n        const data = await response.json();\r\n        setArtists(data);\r\n      } catch (error) {\r\n        console.error('Error fetching top artists:', error);\r\n        setError('Failed to load top artists.');\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  const handleArtistClick = (artistId) => {\r\n    const artist = artists.find(artist => artist.id === artistId);\r\n    if (artist) {\r\n      setSelectedArtist(artist);\r\n      setError(null);\r\n    } else {\r\n      setError('Failed to load artist details.');\r\n    }\r\n  };\r\n\r\n  const handleSongClick = (song) => {\r\n    setCurrentSong(song);\r\n  };\r\n\r\n  return (\r\n    <ArtistsContainer>\r\n      <h2>Top Artists</h2>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      <ArtistList>\r\n        {artists.map(artist => (\r\n          <ArtistItem key={artist.id} onClick={() => handleArtistClick(artist.id)}>\r\n            {artist.name}\r\n          </ArtistItem>\r\n        ))}\r\n      </ArtistList>\r\n      {selectedArtist && (\r\n        <ArtistDetailsContainer>\r\n          <ArtistImage src={selectedArtist.image} alt={selectedArtist.name} />\r\n          <h3>{selectedArtist.name}</h3>\r\n          <SongList>\r\n            {selectedArtist.songs.slice(0, 4).map(song => (\r\n              <SongItem key={song.id} onClick={() => handleSongClick(song)}>\r\n                {song.name}\r\n              </SongItem>\r\n            ))}\r\n          </SongList>\r\n        </ArtistDetailsContainer>\r\n      )}\r\n      {currentSong && (\r\n        <PlayerContainer>\r\n          <h3>Now Playing: {currentSong.name}</h3>\r\n          <AudioPlayer controls src={currentSong.url} autoPlay />\r\n        </PlayerContainer>\r\n      )}\r\n    </ArtistsContainer>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}