{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport artists from './data/artists.json'; // Adjust the path to your JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n_c = HomeContainer;\nconst SectionTitle = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 20px;\n`;\n_c2 = SectionTitle;\nconst SectionContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\n_c3 = SectionContainer;\nconst Card = styled.div`\n  width: 200px; /* Adjusted width */\n  padding: 20px;\n  margin: 10px;\n  background-color: #1c1c1c;\n  color: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c4 = Card;\nconst SearchContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n`;\n_c5 = SearchContainer;\nconst SearchInput = styled.input`\n  padding: 10px;\n  width: 300px;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n_c6 = SearchInput;\nconst ResultCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin: 10px;\n`;\n_c7 = ResultCard;\nconst ResultImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n_c8 = ResultImage;\nconst SongImage = styled.img`\n  width: 100%;\n  height: 150px; /* Adjusted height */\n  object-fit: cover;\n  border-radius: 8px 8px 0 0;\n`;\n_c9 = SongImage;\nconst Home = ({\n  songs,\n  onSelectSong\n}) => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [artistSongs, setArtistSongs] = useState([]);\n  const handleSearch = query => {\n    if (query === '') {\n      setSearchResults([]);\n      return;\n    }\n    const songResults = songs.filter(song => song.name && song.name.toLowerCase().includes(query.toLowerCase()) || song.artist && song.artist.toLowerCase().includes(query.toLowerCase()));\n    setSearchResults(songResults);\n  };\n  const handleArtistClick = artistId => {\n    const selectedArtist = artists.find(artist => artist.id === artistId);\n    if (selectedArtist) {\n      setArtistSongs(selectedArtist.songs);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(HomeContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Spotify 2.0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: /*#__PURE__*/_jsxDEV(SearchInput, {\n        type: \"text\",\n        placeholder: \"Search for songs...\",\n        onChange: e => handleSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SectionContainer, {\n        children: searchResults.map((song, index) => /*#__PURE__*/_jsxDEV(ResultCard, {\n          onClick: () => onSelectSong(song, index),\n          children: [/*#__PURE__*/_jsxDEV(ResultImage, {\n            src: song.image,\n            alt: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"by \", song.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionContainer, {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => handleArtistClick(artist.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.image,\n          alt: artist.name,\n          style: {\n            width: '100%',\n            borderRadius: '50%',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), artistSongs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Artist Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SectionContainer, {\n        children: artistSongs.map((song, index) => {\n          var _artists$find;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => onSelectSong(song, index),\n            children: [/*#__PURE__*/_jsxDEV(SongImage, {\n              src: song.image || 'default-image-path.jpg',\n              alt: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"by \", (_artists$find = artists.find(artist => artist.id === song.artistId)) === null || _artists$find === void 0 ? void 0 : _artists$find.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, song.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Top Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionContainer, {\n      children: songs.slice(0, 4).map((song, index) => /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => onSelectSong(song, index),\n        children: [/*#__PURE__*/_jsxDEV(SongImage, {\n          src: song.image,\n          alt: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"by \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"nichRRvFEcX9N8jx5x5sBkVBZlk=\");\n_c10 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"HomeContainer\");\n$RefreshReg$(_c2, \"SectionTitle\");\n$RefreshReg$(_c3, \"SectionContainer\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"SearchContainer\");\n$RefreshReg$(_c6, \"SearchInput\");\n$RefreshReg$(_c7, \"ResultCard\");\n$RefreshReg$(_c8, \"ResultImage\");\n$RefreshReg$(_c9, \"SongImage\");\n$RefreshReg$(_c10, \"Home\");","map":{"version":3,"names":["React","useState","styled","artists","jsxDEV","_jsxDEV","HomeContainer","div","_c","SectionTitle","h2","_c2","SectionContainer","_c3","Card","_c4","SearchContainer","_c5","SearchInput","input","_c6","ResultCard","_c7","ResultImage","img","_c8","SongImage","_c9","Home","songs","onSelectSong","_s","searchResults","setSearchResults","artistSongs","setArtistSongs","handleSearch","query","songResults","filter","song","name","toLowerCase","includes","artist","handleArtistClick","artistId","selectedArtist","find","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","length","map","index","onClick","src","image","alt","style","width","borderRadius","height","_artists$find","slice","_c10","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport artists from './data/artists.json'; // Adjust the path to your JSON file\r\n\r\nconst HomeContainer = styled.div`\r\n  padding: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SectionContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  width: 200px; /* Adjusted width */\r\n  padding: 20px;\r\n  margin: 10px;\r\n  background-color: #1c1c1c;\r\n  color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 10px;\r\n  width: 300px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ResultCard = styled(Card)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin: 10px;\r\n`;\r\n\r\nconst ResultImage = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst SongImage = styled.img`\r\n  width: 100%;\r\n  height: 150px; /* Adjusted height */\r\n  object-fit: cover;\r\n  border-radius: 8px 8px 0 0;\r\n`;\r\n\r\nconst Home = ({ songs, onSelectSong }) => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [artistSongs, setArtistSongs] = useState([]);\r\n\r\n  const handleSearch = (query) => {\r\n    if (query === '') {\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    const songResults = songs.filter(song =>\r\n      (song.name && song.name.toLowerCase().includes(query.toLowerCase())) ||\r\n      (song.artist && song.artist.toLowerCase().includes(query.toLowerCase()))\r\n    );\r\n\r\n    setSearchResults(songResults);\r\n  };\r\n\r\n  const handleArtistClick = (artistId) => {\r\n    const selectedArtist = artists.find(artist => artist.id === artistId);\r\n    if (selectedArtist) {\r\n      setArtistSongs(selectedArtist.songs);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <h1>Welcome to Spotify 2.0</h1>\r\n\r\n      <SearchContainer>\r\n        <SearchInput\r\n          type=\"text\"\r\n          placeholder=\"Search for songs...\"\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n        />\r\n      </SearchContainer>\r\n\r\n      {searchResults.length > 0 && (\r\n        <div>\r\n          <h3>Search Results</h3>\r\n          <SectionContainer>\r\n            {searchResults.map((song, index) => (\r\n              <ResultCard key={index} onClick={() => onSelectSong(song, index)}>\r\n                <ResultImage src={song.image} alt={song.name} />\r\n                <div>\r\n                  <h4>{song.name}</h4>\r\n                  <p>by {song.artist}</p>\r\n                </div>\r\n              </ResultCard>\r\n            ))}\r\n          </SectionContainer>\r\n        </div>\r\n      )}\r\n\r\n      <SectionTitle>Top Artists</SectionTitle>\r\n      <SectionContainer>\r\n        {artists.map(artist => (\r\n          <Card key={artist.id} onClick={() => handleArtistClick(artist.id)}>\r\n            <img src={artist.image} alt={artist.name} style={{ width: '100%', borderRadius: '50%', height: '150px' }} />\r\n            <h3>{artist.name}</h3>\r\n          </Card>\r\n        ))}\r\n      </SectionContainer>\r\n\r\n      {artistSongs.length > 0 && (\r\n        <div>\r\n          <SectionTitle>Artist Songs</SectionTitle>\r\n          <SectionContainer>\r\n            {artistSongs.map((song, index) => (\r\n              <Card key={song.id} onClick={() => onSelectSong(song, index)}>\r\n                <SongImage src={song.image || 'default-image-path.jpg'} alt={song.name} />\r\n                <h3>{song.name}</h3>\r\n                <p>by {artists.find(artist => artist.id === song.artistId)?.name}</p>\r\n              </Card>\r\n            ))}\r\n          </SectionContainer>\r\n        </div>\r\n      )}\r\n\r\n      <SectionTitle>Top Songs</SectionTitle>\r\n      <SectionContainer>\r\n        {songs.slice(0, 4).map((song, index) => (\r\n          <Card key={song.id} onClick={() => onSelectSong(song, index)}>\r\n            <SongImage src={song.image} alt={song.name} />\r\n            <h3>{song.name}</h3>\r\n            <p>by {song.artist}</p>\r\n          </Card>\r\n        ))}\r\n      </SectionContainer>\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}