{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistsContainer = styled.div`\n  padding: 20px;\n  background-color: #121212;\n  color: white;\n`;\n_c = ArtistsContainer;\nconst ArtistList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c2 = ArtistList;\nconst ArtistItem = styled.li`\n  cursor: pointer;\n  margin: 10px 0;\n  &:hover {\n    color: #1db954;\n  }\n`;\n_c3 = ArtistItem;\nconst ArtistDetailsContainer = styled.div`\n  margin-top: 20px;\n`;\n_c4 = ArtistDetailsContainer;\nconst ArtistImage = styled.img`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  margin-bottom: 20px;\n`;\n_c5 = ArtistImage;\nconst SongList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c6 = SongList;\nconst SongItem = styled.li`\n  margin: 10px 0;\n`;\n_c7 = SongItem;\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-top: 20px;\n`;\n_c8 = ErrorMessage;\nconst TopArtists = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Replace with your actual API call\n    const fetchArtists = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/top-artists');\n        const data = await response.json();\n        setArtists(data);\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n        setError('Failed to load top artists.');\n      }\n    };\n    fetchArtists();\n  }, []);\n  const handleArtistClick = artistId => {\n    const artist = artists.find(artist => artist.id === artistId);\n    if (artist) {\n      setSelectedArtist(artist);\n      setError(null);\n    } else {\n      setError('Failed to load artist details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ArtistsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ArtistList, {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(ArtistItem, {\n        onClick: () => handleArtistClick(artist.id),\n        children: artist.name\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(ArtistDetailsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ArtistImage, {\n        src: selectedArtist.image,\n        alt: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SongList, {\n        children: selectedArtist.songs.slice(0, 4).map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: song.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtists, \"1r4UkaMyo+3PnDJatLUeo6iVPxE=\");\n_c9 = TopArtists;\nexport default TopArtists;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ArtistsContainer\");\n$RefreshReg$(_c2, \"ArtistList\");\n$RefreshReg$(_c3, \"ArtistItem\");\n$RefreshReg$(_c4, \"ArtistDetailsContainer\");\n$RefreshReg$(_c5, \"ArtistImage\");\n$RefreshReg$(_c6, \"SongList\");\n$RefreshReg$(_c7, \"SongItem\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","ArtistsContainer","div","_c","ArtistList","ul","_c2","ArtistItem","li","_c3","ArtistDetailsContainer","_c4","ArtistImage","img","_c5","SongList","_c6","SongItem","_c7","ErrorMessage","_c8","TopArtists","_s","artists","setArtists","selectedArtist","setSelectedArtist","error","setError","fetchArtists","response","fetch","data","json","console","handleArtistClick","artistId","artist","find","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","src","image","alt","songs","slice","song","href","url","target","rel","_c9","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/TopArtists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ArtistsContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: #121212;\r\n  color: white;\r\n`;\r\n\r\nconst ArtistList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst ArtistItem = styled.li`\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n  &:hover {\r\n    color: #1db954;\r\n  }\r\n`;\r\n\r\nconst ArtistDetailsContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ArtistImage = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SongList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst SongItem = styled.li`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TopArtists = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual API call\r\n    const fetchArtists = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/top-artists');\r\n        const data = await response.json();\r\n        setArtists(data);\r\n      } catch (error) {\r\n        console.error('Error fetching top artists:', error);\r\n        setError('Failed to load top artists.');\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  const handleArtistClick = (artistId) => {\r\n    const artist = artists.find(artist => artist.id === artistId);\r\n    if (artist) {\r\n      setSelectedArtist(artist);\r\n      setError(null);\r\n    } else {\r\n      setError('Failed to load artist details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ArtistsContainer>\r\n      <h2>Top Artists</h2>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      <ArtistList>\r\n        {artists.map(artist => (\r\n          <ArtistItem key={artist.id} onClick={() => handleArtistClick(artist.id)}>\r\n            {artist.name}\r\n          </ArtistItem>\r\n        ))}\r\n      </ArtistList>\r\n      {selectedArtist && (\r\n        <ArtistDetailsContainer>\r\n          <ArtistImage src={selectedArtist.image} alt={selectedArtist.name} />\r\n          <h3>{selectedArtist.name}</h3>\r\n          <SongList>\r\n            {selectedArtist.songs.slice(0, 4).map(song => (\r\n              <SongItem key={song.id}>\r\n                <a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">{song.name}</a>\r\n              </SongItem>\r\n            ))}\r\n          </SongList>\r\n        </ArtistDetailsContainer>\r\n      )}\r\n    </ArtistsContainer>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}