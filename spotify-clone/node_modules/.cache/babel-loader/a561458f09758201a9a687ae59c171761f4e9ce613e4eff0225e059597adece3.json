{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\pages\\\\Artist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getArtistSongs } from '../api'; // Assume this function fetches songs by artist\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistContainer = styled.div`\n  padding: 20px;\n  text-align: center;\n`;\n_c = ArtistContainer;\nconst SongList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = SongList;\nconst SongItem = styled.div`\n  width: 300px;\n  padding: 10px;\n  margin: 10px;\n  background-color: #1c1c1c;\n  color: white;\n  border-radius: 8px;\n  text-align: left;\n`;\n_c3 = SongItem;\nconst Artist = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      const fetchedSongs = await getArtistSongs(name);\n      setSongs(fetchedSongs);\n    };\n    fetchSongs();\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(ArtistContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongList, {\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Artist, \"6WvRkVK4f2ImjMf4qH7j6RGOha8=\", false, function () {\n  return [useParams];\n});\n_c4 = Artist;\nexport default Artist;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ArtistContainer\");\n$RefreshReg$(_c2, \"SongList\");\n$RefreshReg$(_c3, \"SongItem\");\n$RefreshReg$(_c4, \"Artist\");","map":{"version":3,"names":["React","useState","useEffect","useParams","styled","getArtistSongs","jsxDEV","_jsxDEV","ArtistContainer","div","_c","SongList","_c2","SongItem","_c3","Artist","_s","name","songs","setSongs","fetchSongs","fetchedSongs","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","index","artist","_c4","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/pages/Artist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { getArtistSongs } from '../api';  // Assume this function fetches songs by artist\r\n\r\nconst ArtistContainer = styled.div`\r\n  padding: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SongList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst SongItem = styled.div`\r\n  width: 300px;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  background-color: #1c1c1c;\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Artist = () => {\r\n  const { name } = useParams();\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      const fetchedSongs = await getArtistSongs(name);\r\n      setSongs(fetchedSongs);\r\n    };\r\n    fetchSongs();\r\n  }, [name]);\r\n\r\n  return (\r\n    <ArtistContainer>\r\n      <h1>{name}</h1>\r\n      <SongList>\r\n        {songs.map((song, index) => (\r\n          <SongItem key={index}>\r\n            <h3>{song.name}</h3>\r\n            <p>{song.artist}</p>\r\n          </SongItem>\r\n        ))}\r\n      </SongList>\r\n    </ArtistContainer>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAG;AAClC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,eAAe;AAKrB,MAAMG,QAAQ,GAAGP,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,QAAQ;AAMd,MAAME,QAAQ,GAAGT,MAAM,CAACK,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GARID,QAAQ;AAUd,MAAME,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAK,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,YAAY,GAAG,MAAMhB,cAAc,CAACY,IAAI,CAAC;MAC/CE,QAAQ,CAACE,YAAY,CAAC;IACxB,CAAC;IACDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEV,OAAA,CAACC,eAAe;IAAAc,QAAA,gBACdf,OAAA;MAAAe,QAAA,EAAKL;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfnB,OAAA,CAACI,QAAQ;MAAAW,QAAA,EACNJ,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBtB,OAAA,CAACM,QAAQ;QAAAS,QAAA,gBACPf,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACX;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBnB,OAAA;UAAAe,QAAA,EAAIM,IAAI,CAACE;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFPG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEtB,CAAC;AAACV,EAAA,CAzBID,MAAM;EAAA,QACOZ,SAAS;AAAA;AAAA4B,GAAA,GADtBhB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}