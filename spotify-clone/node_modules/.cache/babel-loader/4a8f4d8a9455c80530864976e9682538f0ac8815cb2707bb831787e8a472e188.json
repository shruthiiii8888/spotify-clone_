{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\AlbumList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getAlbums } from '../api';\nimport AlbumSongs from './AlbumSongs'; // Import the AlbumSongs component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumContainer = styled.div`\n  padding: 20px;\n`;\n_c = AlbumContainer;\nconst AlbumListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c2 = AlbumListContainer;\nconst AlbumItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 150px;\n  cursor: pointer;\n  transition: transform 0.2s;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c3 = AlbumItem;\nconst AlbumImage = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 10px;\n`;\n_c4 = AlbumImage;\nconst AlbumTitle = styled.span`\n  margin-top: 10px;\n  font-size: 16px;\n  text-align: center;\n`;\n_c5 = AlbumTitle;\nconst AlbumList = () => {\n  _s();\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbumId, setSelectedAlbumId] = useState(null);\n  useEffect(() => {\n    const fetchAlbums = async () => {\n      try {\n        const data = await getAlbums();\n        setAlbums(data);\n      } catch (error) {\n        console.error('Error fetching albums:', error);\n      }\n    };\n    fetchAlbums();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AlbumContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlbumListContainer, {\n      children: albums.map(album => /*#__PURE__*/_jsxDEV(AlbumItem, {\n        onClick: () => setSelectedAlbumId(album.id),\n        children: [/*#__PURE__*/_jsxDEV(AlbumImage, {\n          src: album.image,\n          alt: album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AlbumTitle, {\n          children: album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, album.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), selectedAlbumId && /*#__PURE__*/_jsxDEV(AlbumSongs, {\n      albumId: selectedAlbumId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumList, \"ihCiKwGRINpc2sEE2jLOoQwz4+g=\");\n_c6 = AlbumList;\nexport default AlbumList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"AlbumContainer\");\n$RefreshReg$(_c2, \"AlbumListContainer\");\n$RefreshReg$(_c3, \"AlbumItem\");\n$RefreshReg$(_c4, \"AlbumImage\");\n$RefreshReg$(_c5, \"AlbumTitle\");\n$RefreshReg$(_c6, \"AlbumList\");","map":{"version":3,"names":["React","useState","useEffect","styled","getAlbums","AlbumSongs","jsxDEV","_jsxDEV","AlbumContainer","div","_c","AlbumListContainer","ul","_c2","AlbumItem","li","_c3","AlbumImage","img","_c4","AlbumTitle","span","_c5","AlbumList","_s","albums","setAlbums","selectedAlbumId","setSelectedAlbumId","fetchAlbums","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","album","onClick","id","src","image","alt","title","albumId","_c6","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/AlbumList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getAlbums } from '../api';\r\nimport AlbumSongs from './AlbumSongs'; // Import the AlbumSongs component\r\n\r\nconst AlbumContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst AlbumListContainer = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n`;\r\n\r\nconst AlbumItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 150px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst AlbumImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst AlbumTitle = styled.span`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AlbumList = () => {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [selectedAlbumId, setSelectedAlbumId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      try {\r\n        const data = await getAlbums();\r\n        setAlbums(data);\r\n      } catch (error) {\r\n        console.error('Error fetching albums:', error);\r\n      }\r\n    };\r\n\r\n    fetchAlbums();\r\n  }, []);\r\n\r\n  return (\r\n    <AlbumContainer>\r\n      <h2>Albums</h2>\r\n      <AlbumListContainer>\r\n        {albums.map(album => (\r\n          <AlbumItem key={album.id} onClick={() => setSelectedAlbumId(album.id)}>\r\n            <AlbumImage src={album.image} alt={album.title} />\r\n            <AlbumTitle>{album.title}</AlbumTitle>\r\n          </AlbumItem>\r\n        ))}\r\n      </AlbumListContainer>\r\n      {selectedAlbumId && <AlbumSongs albumId={selectedAlbumId} />}\r\n    </AlbumContainer>\r\n  );\r\n};\r\n\r\nexport default AlbumList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}