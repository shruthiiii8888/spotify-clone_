{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getTopArtists, getArtistDetails } from '../api';\nimport ArtistDetails from './ArtistDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistsContainer = styled.div`\n  padding: 20px;\n  background-color: #121212;\n  color: white;\n`;\n_c = ArtistsContainer;\nconst ArtistList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c2 = ArtistList;\nconst ArtistItem = styled.li`\n  cursor: pointer;\n  margin: 10px 0;\n  &:hover {\n    color: #1db954;\n  }\n`;\n_c3 = ArtistItem;\nconst ErrorMessage = styled.div`\n  color: red;\n  margin-top: 20px;\n`;\n_c4 = ErrorMessage;\nconst TopArtists = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        const data = await getTopArtists();\n        setArtists(data);\n      } catch (error) {\n        console.error('Error fetching top artists:', error);\n        setError('Failed to load top artists.');\n      }\n    };\n    fetchArtists();\n  }, []);\n  const handleArtistClick = async artistId => {\n    try {\n      const artistDetails = await getArtistDetails(artistId);\n      setSelectedArtist(artistDetails);\n      setError(null); // Clear any previous error\n    } catch (error) {\n      console.error(`Error fetching artist details for artist ID ${artistId}:`, error);\n      setError('Failed to load artist details.');\n    }\n  };\n  const handleSongClick = songUrl => {\n    setCurrentSong(songUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(ArtistsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ArtistList, {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(ArtistItem, {\n        onClick: () => handleArtistClick(artist.id),\n        children: artist.name\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(ArtistDetails, {\n      artist: selectedArtist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: currentSong,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtists, \"xXqwSVC+xj8BbVPnxTadf0fdGzc=\");\n_c5 = TopArtists;\nexport default TopArtists;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ArtistsContainer\");\n$RefreshReg$(_c2, \"ArtistList\");\n$RefreshReg$(_c3, \"ArtistItem\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","styled","getTopArtists","getArtistDetails","ArtistDetails","jsxDEV","_jsxDEV","ArtistsContainer","div","_c","ArtistList","ul","_c2","ArtistItem","li","_c3","ErrorMessage","_c4","TopArtists","_s","artists","setArtists","selectedArtist","setSelectedArtist","currentSong","setCurrentSong","error","setError","fetchArtists","data","console","handleArtistClick","artistId","artistDetails","handleSongClick","songUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","onClick","id","name","controls","autoPlay","src","type","_c5","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/TopArtists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getTopArtists, getArtistDetails } from '../api';\r\nimport ArtistDetails from './ArtistDetails';\r\n\r\nconst ArtistsContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: #121212;\r\n  color: white;\r\n`;\r\n\r\nconst ArtistList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst ArtistItem = styled.li`\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n  &:hover {\r\n    color: #1db954;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TopArtists = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      try {\r\n        const data = await getTopArtists();\r\n        setArtists(data);\r\n      } catch (error) {\r\n        console.error('Error fetching top artists:', error);\r\n        setError('Failed to load top artists.');\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  const handleArtistClick = async (artistId) => {\r\n    try {\r\n      const artistDetails = await getArtistDetails(artistId);\r\n      setSelectedArtist(artistDetails);\r\n      setError(null); // Clear any previous error\r\n    } catch (error) {\r\n      console.error(`Error fetching artist details for artist ID ${artistId}:`, error);\r\n      setError('Failed to load artist details.');\r\n    }\r\n  };\r\n\r\n  const handleSongClick = (songUrl) => {\r\n    setCurrentSong(songUrl);\r\n  };\r\n\r\n  return (\r\n    <ArtistsContainer>\r\n      <h2>Top Artists</h2>\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n      <ArtistList>\r\n        {artists.map(artist => (\r\n          <ArtistItem key={artist.id} onClick={() => handleArtistClick(artist.id)}>\r\n            {artist.name}\r\n          </ArtistItem>\r\n        ))}\r\n      </ArtistList>\r\n      {selectedArtist && (\r\n        <ArtistDetails artist={selectedArtist} />\r\n      )}\r\n      {currentSong && (\r\n        <audio controls autoPlay>\r\n          <source src={currentSong} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </ArtistsContainer>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}