{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\AlbumSongs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getAlbumSongs } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongsContainer = styled.div`\n  padding: 20px;\n`;\n_c = SongsContainer;\nconst SongListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c2 = SongListContainer;\nconst SongItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 150px;\n  cursor: pointer;\n  transition: transform 0.2s;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c3 = SongItem;\nconst SongImage = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 10px;\n`;\n_c4 = SongImage;\nconst SongTitle = styled.span`\n  margin-top: 10px;\n  font-size: 16px;\n  text-align: center;\n`;\n_c5 = SongTitle;\nconst AlbumSongs = ({\n  albumId\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const data = await getAlbumSongs(albumId);\n        setSongs(data);\n      } catch (error) {\n        console.error('Error fetching album songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [albumId]);\n  return /*#__PURE__*/_jsxDEV(SongsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Album Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongListContainer, {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n        children: [/*#__PURE__*/_jsxDEV(SongImage, {\n          src: song.image,\n          alt: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SongTitle, {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumSongs, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c6 = AlbumSongs;\nexport default AlbumSongs;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SongsContainer\");\n$RefreshReg$(_c2, \"SongListContainer\");\n$RefreshReg$(_c3, \"SongItem\");\n$RefreshReg$(_c4, \"SongImage\");\n$RefreshReg$(_c5, \"SongTitle\");\n$RefreshReg$(_c6, \"AlbumSongs\");","map":{"version":3,"names":["React","useState","useEffect","styled","getAlbumSongs","jsxDEV","_jsxDEV","SongsContainer","div","_c","SongListContainer","ul","_c2","SongItem","li","_c3","SongImage","img","_c4","SongTitle","span","_c5","AlbumSongs","albumId","_s","songs","setSongs","fetchSongs","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","src","image","alt","name","id","_c6","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/AlbumSongs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getAlbumSongs } from '../api';\r\n\r\nconst SongsContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst SongListContainer = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n`;\r\n\r\nconst SongItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 150px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst SongImage = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst SongTitle = styled.span`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AlbumSongs = ({ albumId }) => {\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      try {\r\n        const data = await getAlbumSongs(albumId);\r\n        setSongs(data);\r\n      } catch (error) {\r\n        console.error('Error fetching album songs:', error);\r\n      }\r\n    };\r\n\r\n    fetchSongs();\r\n  }, [albumId]);\r\n\r\n  return (\r\n    <SongsContainer>\r\n      <h2>Album Songs</h2>\r\n      <SongListContainer>\r\n        {songs.map(song => (\r\n          <SongItem key={song.id}>\r\n            <SongImage src={song.image} alt={song.name} />\r\n            <SongTitle>{song.name}</SongTitle>\r\n          </SongItem>\r\n        ))}\r\n      </SongListContainer>\r\n    </SongsContainer>\r\n  );\r\n};\r\n\r\nexport default AlbumSongs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}