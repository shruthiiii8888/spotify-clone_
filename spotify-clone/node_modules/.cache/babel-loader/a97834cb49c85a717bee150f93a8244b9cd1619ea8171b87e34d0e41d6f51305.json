{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BR SAMYUKTHA\\\\OneDrive\\\\Documents\\\\New folder\\\\spotify-clone\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\n// TopArtists.js\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getTopArtists, getArtistDetails } from '../api';\nimport ArtistDetails from './ArtistDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistsContainer = styled.div`\n  padding: 20px;\n  background-color: #121212;\n  color: white;\n`;\n_c = ArtistsContainer;\nconst ArtistList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c2 = ArtistList;\nconst ArtistItem = styled.li`\n  cursor: pointer;\n  margin: 10px 0;\n  &:hover {\n    color: #1db954;\n  }\n`;\n_c3 = ArtistItem;\nconst TopArtists = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  useEffect(() => {\n    const fetchArtists = async () => {\n      const data = await getTopArtists();\n      setArtists(data);\n    };\n    fetchArtists();\n  }, []);\n  const handleArtistClick = async artistId => {\n    const artistDetails = await getArtistDetails(artistId);\n    setSelectedArtist(artistDetails);\n  };\n  const handleSongClick = songUrl => {\n    setCurrentSong(songUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(ArtistsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArtistList, {\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(ArtistItem, {\n        onClick: () => handleArtistClick(artist.id),\n        children: artist.name\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(ArtistDetails, {\n      artist: selectedArtist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: currentSong,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(TopArtists, \"i0C9Ubdv7hxMnndjHbt+JEQVBlI=\");\n_c4 = TopArtists;\nexport default TopArtists;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ArtistsContainer\");\n$RefreshReg$(_c2, \"ArtistList\");\n$RefreshReg$(_c3, \"ArtistItem\");\n$RefreshReg$(_c4, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","styled","getTopArtists","getArtistDetails","ArtistDetails","jsxDEV","_jsxDEV","ArtistsContainer","div","_c","ArtistList","ul","_c2","ArtistItem","li","_c3","TopArtists","_s","artists","setArtists","selectedArtist","setSelectedArtist","currentSong","setCurrentSong","fetchArtists","data","handleArtistClick","artistId","artistDetails","handleSongClick","songUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","onClick","id","name","controls","autoPlay","src","type","_c4","$RefreshReg$"],"sources":["C:/Users/BR SAMYUKTHA/OneDrive/Documents/New folder/spotify-clone/src/components/TopArtists.js"],"sourcesContent":["// TopArtists.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { getTopArtists, getArtistDetails } from '../api';\r\nimport ArtistDetails from './ArtistDetails';\r\n\r\nconst ArtistsContainer = styled.div`\r\n  padding: 20px;\r\n  background-color: #121212;\r\n  color: white;\r\n`;\r\n\r\nconst ArtistList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nconst ArtistItem = styled.li`\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n  &:hover {\r\n    color: #1db954;\r\n  }\r\n`;\r\n\r\nconst TopArtists = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      const data = await getTopArtists();\r\n      setArtists(data);\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  const handleArtistClick = async (artistId) => {\r\n    const artistDetails = await getArtistDetails(artistId);\r\n    setSelectedArtist(artistDetails);\r\n  };\r\n\r\n  const handleSongClick = (songUrl) => {\r\n    setCurrentSong(songUrl);\r\n  };\r\n\r\n  return (\r\n    <ArtistsContainer>\r\n      <h2>Top Artists</h2>\r\n      <ArtistList>\r\n        {artists.map(artist => (\r\n          <ArtistItem key={artist.id} onClick={() => handleArtistClick(artist.id)}>\r\n            {artist.name}\r\n          </ArtistItem>\r\n        ))}\r\n      </ArtistList>\r\n      {selectedArtist && (\r\n        <ArtistDetails artist={selectedArtist} />\r\n      )}\r\n      {currentSong && (\r\n        <audio controls autoPlay>\r\n          <source src={currentSong} type=\"audio/mpeg\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </ArtistsContainer>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}